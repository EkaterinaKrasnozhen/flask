# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
# üìå –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ "–ù–∞–∂–º–∏ –º–µ–Ω—è", –ø—Ä–∏
# –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å
# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏.

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å—Å—ã–ª–∫–∞
# –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Ñ–æ—Ä–º–∞
# –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
# –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
# –∏ –ø–∞—Ä–æ–ª—è
# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞
# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞
# —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å
# –æ—à–∏–±–∫–æ–π.

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏
# –∫–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –ø–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤
# –≤ —Ç–µ–∫—Å—Ç–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
# –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –¥–≤—É—Ö
# —á–∏—Å–µ–ª –∏ –≤—ã–±–æ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–ª–æ–∂–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ, —É–º–Ω–æ–∂–µ–Ω–∏–µ
# –∏–ª–∏ –¥–µ–ª–µ–Ω–∏–µ) –∏ –∫–Ω–æ–ø–∫–∞ "–í—ã—á–∏—Å–ª–∏—Ç—å"
# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ
# —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å
# —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.


from pathlib import PurePath, Path
from flask import Flask, redirect, render_template, request, flash, url_for
from werkzeug.utils import secure_filename

app = Flask(__name__)
app.secret_key = b'5f214cacbd30c2ae4784b520f17912ae0d5d8c16ae98128e3f549546221265e4'


@app.route('/')
def start():
    return render_template('press.html')


@app.route('/hello')
def hello1():
    return f'–ü—Ä–∏–≤–µ—Ç'


@app.route('/upload', methods=['GET', 'POST'])
def upload():
    if request.method == 'POST':
        file = request.files.get('file')
        file_name = secure_filename(file.filename)
        file.save(PurePath.joinpath(Path.cwd(), 'Seminar2\\static\\uploads', file_name))
        return f"–§–∞–π–ª {file_name} –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
    return render_template('upload.html')


users = {'admin': '1234',
         'user1': '0000'}


@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        user_name = request.form.get('login')
        passw = request.form.get('passw')
        if not request.form['login']:
            flash('–í–≤–µ–¥–∏—Ç–µ –∏–º—è!', 'danger')
            return redirect(url_for('login'))
        if (user_name, passw) in users.items():
            flash('–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', 'success')
            return redirect(url_for('login'))
        return f' –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å'
    return render_template('login.html')


@app.route('/enter', methods=['GET', 'POST'])
def enter():
    if request.method == 'POST':
        text = request.form.get('text')
        res = len(text.split(' '))
        if not request.form['text']:
            flash('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç!', 'danger')
            return redirect(url_for('enter'))
        flash('–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', 'success')
        return f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ {res}'
    return render_template('enter.html')


@app.route('/calc', methods=['GET', 'POST'])
def calc():
    if request.method == 'POST':
        num1 = int(request.form.get('num1'))
        num2 = int(request.form.get('num2'))
        operation = request.form.get('operation')
       
        match operation:
            case 'add':
                res = num1 + num2
            case 'substract':
                res = num1 - num2
            case 'multiply':
                res = num1 * num2
            case 'divide':
                res = num1 / num2
        return f'{res}'
    
    return render_template('calc.html')


if __name__ == '__main__':
    app.run(debug=True)